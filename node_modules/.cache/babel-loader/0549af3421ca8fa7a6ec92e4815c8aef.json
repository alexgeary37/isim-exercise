{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/isim-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport scale from './assets/radaltback.png';\nimport cover from './assets/radaltcover.png';\nimport needle from './assets/radaltneedle.png';\nimport bugImg from './assets/bug.png';\nimport flagImg from './assets/radaltflag.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [hasPower, setHasPower] = useState(false);\n  const [imageDiameter, setImageDiameter] = useState(0);\n  const [altitude, setAltitude] = useState(0);\n  const [altitudeWithoutPower, setAltitudeWithoutPower] = useState(0);\n  const [bugs, setBugs] = useState(0);\n  const [lightIsOn, setLightIsOn] = useState(false);\n\n  const toggleHasPower = () => {\n    if (!hasPower) {\n      // Power is going to be turned on.\n      setAltitude(altitudeWithoutPower);\n    }\n\n    setHasPower(!hasPower);\n  };\n\n  const initialiseImageDiameter = ({\n    target: img\n  }) => {\n    setImageDiameter(img.width);\n  };\n\n  const updateAltitude = () => {\n    if (hasPower) {\n      const currentAltitude = altitude;\n      const newAltitude = document.getElementById('altitude').value;\n      setAltitude(newAltitude);\n\n      if (currentAltitude >= bugs && newAltitude < bugs) {\n        setLightIsOn(true);\n      }\n\n      if (currentAltitude < bugs && newAltitude >= bugs) {\n        setLightIsOn(false);\n      }\n    } else {\n      setAltitudeWithoutPower(document.getElementById('altitude').value);\n    }\n  };\n\n  const updateBugs = () => {\n    setBugs(document.getElementById('bugs').value);\n  };\n\n  const displayFlag = () => {\n    if (!hasPower) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image_pos\",\n        alt: \"\",\n        src: flagImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const displayLight = () => {\n    if (hasPower && lightIsOn) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"light\",\n        style: {\n          top: imageDiameter / 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  useEffect(() => {\n    let deg;\n    const altitudeDialValue = document.getElementById('altitude').value;\n\n    if (altitudeDialValue <= 500) {\n      deg = 180 * altitudeDialValue / 500;\n    } else if (altitudeDialValue > 500 && altitudeDialValue <= 1000) {\n      deg = 180 + 45 * altitudeDialValue / 500;\n    }\n\n    document.getElementById('needle').style.transform = `rotate(${deg}deg)`;\n  }, [altitude]);\n  useEffect(() => {\n    let deg;\n    const altitudeDialValue = document.getElementById('bugs').value;\n\n    if (altitudeDialValue <= 500) {\n      deg = 180 * altitudeDialValue / 500;\n    } else if (altitudeDialValue > 500 && altitudeDialValue <= 1000) {\n      deg = 180 + 45 * altitudeDialValue / 500;\n    } else {}\n\n    document.getElementById('bug').style.transform = `rotate(${deg}deg)`;\n  }, [bugs]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Radar Altimeter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image_pos\",\n      onLoad: initialiseImageDiameter,\n      alt: \"scale\",\n      id: \"scale\",\n      src: scale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image_pos\",\n      alt: \"cover\",\n      id: \"cover\",\n      src: cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image_pos\",\n      alt: \"needle\",\n      id: \"needle\",\n      src: needle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image_pos\",\n      alt: \"bug\",\n      id: \"bug\",\n      src: bugImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), displayFlag(), displayLight(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      style: {\n        top: imageDiameter\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Altitude:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1500\",\n          id: \"altitude\",\n          onChange: updateAltitude\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bugs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1500\",\n          id: \"bugs\",\n          onChange: updateBugs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Has Power:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"hasPower\",\n          name: \"hasPower\",\n          value: hasPower,\n          onClick: toggleHasPower\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DRRwqsoQwTNL9KckU+VLAJN7zRk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/alex/Documents/isim-test/src/App.js"],"names":["React","useEffect","useState","scale","cover","needle","bugImg","flagImg","App","hasPower","setHasPower","imageDiameter","setImageDiameter","altitude","setAltitude","altitudeWithoutPower","setAltitudeWithoutPower","bugs","setBugs","lightIsOn","setLightIsOn","toggleHasPower","initialiseImageDiameter","target","img","width","updateAltitude","currentAltitude","newAltitude","document","getElementById","value","updateBugs","displayFlag","displayLight","top","deg","altitudeDialValue","style","transform"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport scale from './assets/radaltback.png';\nimport cover from './assets/radaltcover.png';\nimport needle from './assets/radaltneedle.png';\nimport bugImg from './assets/bug.png';\nimport flagImg from './assets/radaltflag.png';\n\nfunction App() {\n  const [hasPower, setHasPower] = useState(false)\n  const [imageDiameter, setImageDiameter] = useState(0)\n  const [altitude, setAltitude] = useState(0)\n  const [altitudeWithoutPower, setAltitudeWithoutPower] = useState(0)\n  const [bugs, setBugs] = useState(0)\n  const [lightIsOn, setLightIsOn] = useState(false)\n\n  const toggleHasPower = () => {\n    if (!hasPower) {\n      // Power is going to be turned on.\n      setAltitude(altitudeWithoutPower)\n    }\n    setHasPower(!hasPower)\n  }\n\n  const initialiseImageDiameter = ({ target: img }) => {\n    setImageDiameter(img.width)\n  }\n\n  const updateAltitude = () => {\n    if (hasPower) {\n      const currentAltitude = altitude\n      const newAltitude = document.getElementById('altitude').value\n      \n      setAltitude(newAltitude)\n\n      if (currentAltitude >= bugs && newAltitude < bugs) {\n        setLightIsOn(true)\n      }\n      if (currentAltitude < bugs && newAltitude >= bugs) {\n        setLightIsOn(false)\n      }\n    } else {\n      setAltitudeWithoutPower(document.getElementById('altitude').value)\n    }\n  }\n\n  const updateBugs = () => {\n    setBugs(document.getElementById('bugs').value)\n  }\n\n  const displayFlag = () => {\n    if (!hasPower) {\n      return <img className='image_pos' alt='' src={flagImg} />\n    }\n  }\n\n  const displayLight = () => {\n    if (hasPower && lightIsOn) {\n      return <span className='light' style={{top: imageDiameter / 2}}></span>\n    }\n  }\n\n  useEffect(() => {\n    let deg;\n    const altitudeDialValue = document.getElementById('altitude').value\n    if (altitudeDialValue <= 500) {\n      deg = 180 * altitudeDialValue / 500\n    } else if (altitudeDialValue > 500 && altitudeDialValue <= 1000) {\n      deg = 180 + (45 * altitudeDialValue / 500)\n    }\n    document.getElementById('needle').style.transform = `rotate(${deg}deg)`\n  }, [altitude])\n\n  useEffect(() => {\n    let deg;\n    const altitudeDialValue = document.getElementById('bugs').value\n    if (altitudeDialValue <= 500) {\n      deg = 180 * altitudeDialValue / 500\n    } else if (altitudeDialValue > 500 && altitudeDialValue <= 1000) {\n      deg = 180 + (45 * altitudeDialValue / 500)\n    } else {\n      \n    }\n    document.getElementById('bug').style.transform = `rotate(${deg}deg)`\n  }, [bugs])\n\n  return (\n    <div>\n      <h1>Radar Altimeter</h1>\n\n      <img className='image_pos' onLoad={initialiseImageDiameter} alt='scale' id='scale' src={scale} />\n      <img className='image_pos' alt='cover' id='cover' src={cover} />\n      <img className='image_pos' alt='needle' id='needle' src={needle} />\n      <img className='image_pos' alt='bug' id='bug' src={bugImg} />\n      {displayFlag()}\n      {displayLight()}\n\n      <div className='controls' style={{top: imageDiameter}}>\n        <div>\n          <label>Altitude:</label>\n          <input type='range' min='0' max='1500' id='altitude' onChange={updateAltitude}></input>\n        </div>\n          <div>\n            <label>Bugs:</label>\n            <input type='range' min='0' max='1500' id='bugs' onChange={updateBugs}></input>\n          </div>\n        <div>\n          <label>Has Power:</label>\n          <input type='checkbox' id='hasPower' name='hasPower' value={hasPower} onClick={toggleHasPower}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}